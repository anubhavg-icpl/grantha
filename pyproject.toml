[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grantha"
version = "0.1.0"
description = "AI-powered knowledge management and documentation platform"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Grantha Team"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
  "fastapi>=0.95.0",
  "uvicorn>=0.21.1",
  "pydantic>=2.0.0",
  "google-generativeai>=0.3.0",
  "tiktoken>=0.5.0",
  "adalflow>=0.1.0",
  "numpy>=1.24.0",
  "faiss-cpu>=1.7.4",
  "langid>=1.1.6",
  "requests>=2.28.0",
  "jinja2>=3.1.2",
  "python-dotenv>=1.0.0",
  "openai>=1.76.2",
  "ollama>=0.4.8",
  "aiohttp>=3.8.4",
  "boto3>=1.34.0",
  "pytest>=7.0.0",
  "azure-identity>=1.12.0",
  "azure-core>=1.24.0",
  "backoff>=2.2.1"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "httpx>=0.24.0",
]

[project.scripts]
grantha = "grantha.main:main"

[project.urls]
Homepage = "https://github.com/anubhavg-icpl/grantha"
Repository = "https://github.com/anubhavg-icpl/grantha"
Documentation = "https://github.com/anubhavg-icpl/grantha/docs"
"Bug Tracker" = "https://github.com/anubhavg-icpl/grantha/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
grantha = ["py.typed"]
